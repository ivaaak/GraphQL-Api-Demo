schema {
  query: Query
  mutation: Mutation
}

type KeyValuePairOfStringAndString {
  key: String!
  value: String!
}

type Mutation {
  addUser(firstName: String! lastName: String!): User!
}

type Query {
  me: User!
  users(filter: UserFilterInput! page: Int! size: Int!): [User!]!
  userKinds: [UserKind!]!
  usersMatrix: [[User!]!]!
  usersByKind(kind: UserKind! page: Int! size: Int!): [User!]!
  usersIds(kind: UserKind! page: Int! size: Int!): [Int!]!
  user(id: Int!): User
  userKind(id: Int!): UserKind!
  admin(id: Int!): User
  container: TypesContainer!
}

type Role {
  id: Int!
  name: String!
}

type TypesContainer {
  text: String!
  value1: Byte!
  value2: Byte
  value3: Short!
  value4: Short
  value5: Int!
  value6: Int
  value7: Long!
  value8: Long
  value9: Float!
  value10: Float
  value11: Float!
  value12: Float
  value13: Decimal!
  value14: Decimal
  value15: DateTime!
  value16: DateTime
  value17: Date!
  value18: Date
  value19: UUID!
  value20: UUID
  value21: [UUID!]!
  value22: [UUID!]
  value23: [UUID!]!
  value24: [UUID!]
  value25: [UUID!]!
  value26: [UUID!]
  value27: [KeyValuePairOfStringAndString!]!
  value28: [KeyValuePairOfStringAndString!]
  value29: KeyValuePairOfStringAndString!
  value30: KeyValuePairOfStringAndString
  value31: DateTime!
  value32: DateTime
}

type User {
  id: Int!
  firstName: String!
  lastName: String!
  userKind: UserKind!
  role: Role
}

input PageInput {
  count: Int!
  size: Int!
}

input UserFilterInput {
  userKind: UserKind!
  page: PageInput
}

enum UserKind {
  GOOD
  BAD
}

"The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`."
directive @defer("If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to." label: String "Deferred when true." if: Boolean) on FRAGMENT_SPREAD | INLINE_FRAGMENT

"The `@specifiedBy` directive is used within the type system definition language to provide a URL for specifying the behavior of custom scalar definitions."
directive @specifiedBy("The specifiedBy URL points to a human-readable specification. This field will only read a result for scalar types." url: String!) on SCALAR

"The `@stream` directive may be provided for a field of `List` type so that the backend can leverage technology such as asynchronous iterators to provide a partial list in the initial response, and additional list items in subsequent responses. `@include` and `@skip` take precedence over `@stream`."
directive @stream("If this argument label has a value other than null, it will be passed on to the result of this stream directive. This label is intended to give client applications a way to identify to which fragment a streamed result belongs to." label: String "The initial elements that shall be send down to the consumer." initialCount: Int! = 0 "Streamed when true." if: Boolean) on FIELD

"The `Byte` scalar type represents non-fractional whole numeric values. Byte can represent values between 0 and 255."
scalar Byte

"The `Date` scalar represents an ISO-8601 compliant date type."
scalar Date

"The `DateTime` scalar represents an ISO-8601 compliant date time type."
scalar DateTime @specifiedBy(url: "https:\/\/www.graphql-scalars.com\/date-time")

"The built-in `Decimal` scalar type."
scalar Decimal

"The `Long` scalar type represents non-fractional signed whole 64-bit numeric values. Long can represent values between -(2^63) and 2^63 - 1."
scalar Long

"The `Short` scalar type represents non-fractional signed whole 16-bit numeric values. Short can represent values between -(2^15) and 2^15 - 1."
scalar Short

scalar UUID @specifiedBy(url: "https:\/\/tools.ietf.org\/html\/rfc4122")